import { noAccessMessage } from "const";
import { SlashCommandBuilder } from "discord.js";
import { globalStore } from "store";
import { Execute } from "types";
import { isPermittedMember, logger } from "utils";

export const data = new SlashCommandBuilder()
    .setName("broadcast")
    .setDescription("–†–µ–∂–∏–º —ç—Ñ–∏—Ä–∞")
    .addStringOption((option) =>
        option
            .setName("mode")
            .setDescription("–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å")
            .addChoices(
                { name: "–í–ö–õ", value: "on" },
                { name: "–í–´–ö–õ", value: "off" }
            )
    );

export const execute: Execute = async (interaction) => {
    await interaction.deferReply();

    if (!isPermittedMember(interaction.member)) {
        return interaction.editReply(noAccessMessage);
    }

    const mode = interaction.options.getString("mode");

    if (mode === "on") {
        globalStore.broadcastMode = true;
        logger.log(
            `Broadcast mode was turned ON by ${interaction.user.globalName}`
        );
        return interaction.editReply("üî¥  **–†–µ–∂–∏–º —ç—Ñ–∏—Ä–∞ –≤–∫–ª—é—á–µ–Ω!**");
    } else if (mode === "off") {
        globalStore.broadcastMode = false;
        logger.log(
            `Broadcast mode was turned OFF by ${interaction.user.globalName}`
        );
        return interaction.editReply("üìª  **–†–µ–∂–∏–º —ç—Ñ–∏—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω!**");
    } else {
        if (globalStore.broadcastMode) {
            return interaction.editReply("üî¥  **–†–µ–∂–∏–º —ç—Ñ–∏—Ä–∞ —Å–µ–π—á–∞—Å –≤–∫–ª—é—á–µ–Ω!**");
        }
        return interaction.editReply("üìª  **–†–µ–∂–∏–º —ç—Ñ–∏—Ä–∞ —Å–µ–π—á–∞—Å –≤—ã–∫–ª—é—á–µ–Ω!**");
    }
};
